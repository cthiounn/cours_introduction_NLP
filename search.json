[
  {
    "objectID": "ressources.html",
    "href": "ressources.html",
    "title": "Cours introduction au NLP",
    "section": "",
    "text": "https://www.cri.ensmp.fr/~silber/nlp_archives/202406_intro_nlp.pdf\nhttps://www-inf.telecom-sudparis.eu/COURS/CSC4538/Supports/cours/intro_nlp.pdf\nhttps://cours-machine-learning.blogspot.com/p/nlp-web-mining.html\nhttps://course.spacy.io/fr/\nhttps://www.stat4decision.com/fr/traitement-langage-naturel-francais-tal-nlp/\nhttps://oku.ozturkibrahim.com/docs_python/Deep_Learning_for_Natural_Language_Processing.pdf\nhttps://karczmarczuk.users.greyc.fr/TEACH/TAL/Doc/Handbook%20Of%20Natural%20Language%20Processing,%20Second%20Edition%20Chapman%20&%20Hall%20Crc%20Machine%20Learning%20&%20Pattern%20Recognition%202010.pdf\nhttps://github.com/msd495/machine-learning-pdf-books/blob/master/Deep%20Learning%20for%20Natural%20Language%20Processing.pdf"
  },
  {
    "objectID": "notebooks/NLTK.html",
    "href": "notebooks/NLTK.html",
    "title": "Séance 1 - Caractérisation du texte : approche fréquentiste - Préparer le texte et compter les mots",
    "section": "",
    "text": "!pip install -q nltk seaborn pandas WordCloud\nTEXT=\"\"\"   \nACCORD D’ENTREPRISE \nPrime Jeux Olympiques et Paralympiques\nAIRLINES GROUND SERVICES\nDu 11 juillet 2024 \n\n\nEntre les soussignés :\n\nLa société AIRLINES GROUND SERVICES au capital de 38 112 €, inscrite au registre du commerce et des sociétés de Bobigny sous le numéro 411 545 080, dont le siège social est situé à Tremblay en France (Seine Saint Denis) au 3 rue du Remblai, représentée par Xxx, agissant en qualité de Président, \n\nCi-après dénommée la « Société »\n\nD’UNE PART \n\nET \n\nLes organisations syndicales représentées par : \n\nXxx pour la CGT, délégué syndical,\nXxx pour le SMA, délégué syndical,\nXxx pour la CFTC, délégué syndical,\nXxx pour la CFE-CGC, délégué syndical\nXxx pour FO, délégué syndical\n\nCi-après dénommées les « Organisations Syndicales » \n\nD’AUTRE PART\n\nCi-après dénommées ensemble « les Parties »\n\nAfin de répondre aux revendications salariales du personnel de la société AIRLINES GROUND SERVICES et dans le cadre de l’évènement des Jeux Olympiques et Paralympiques organisés en France et le travail des salariés pendant cette période, il a été convenu et arrêté les points suivants : \n\n\nArticle 1 – Champ d’application\n\nLe présent accord s’applique à l’ensemble du personnel salarié de la société AIRLINES GROUND SERVICES.\n\nArticle 2 – Portée de l’accord\n\nLe présent accord est conclu dans le cadre des textes en vigueur du Code du travail. \nCet accord mettant en place des dispositions plus favorables que celles prévues actuellement par la Convention Collective Transport Aérien Personnel au Sol n° 3177, il s’y substitue en ce qui concerne la grille des minimas hiérarchiques.\n\n\n\"\"\"\nimport nltk\n# Module pour les ponctuations, pour savoir comment découper \"M. XXX a trois chats. Il a également deux chiens.\" =&gt; [\"M.\", \"XXX\", ...]\nnltk.download('punkt_tab')\n# Module pour les stopwords\nnltk.download('stopwords')\n# Module pour lemmatiser\nnltk.download('wordnet')"
  },
  {
    "objectID": "notebooks/NLTK.html#séance-2---caractérisation-du-texte---compter-les-mots-par-ensemble---ngrams",
    "href": "notebooks/NLTK.html#séance-2---caractérisation-du-texte---compter-les-mots-par-ensemble---ngrams",
    "title": "Séance 1 - Caractérisation du texte : approche fréquentiste - Préparer le texte et compter les mots",
    "section": "Séance 2 - Caractérisation du texte - Compter les mots par ensemble - Ngrams",
    "text": "Séance 2 - Caractérisation du texte - Compter les mots par ensemble - Ngrams\n\nfrom nltk import ngrams\n\ntokens = words_without_stop_words_and_punctuation\n# Generate bigrams (2-grams)\nbigrams = list(ngrams(tokens, 2))\n\n# Print the bigrams\nprint(tokens)\nprint(bigrams)\n\n# You can also generate trigrams or higher n-grams\ntrigrams = list(ngrams(tokens, 3))\nprint(trigrams)\n\n# For any n-gram, simply change the second parameter of the ngrams function\nn = 4  # Example for 4-grams\nfourgrams = list(ngrams(tokens, n))\nprint(fourgrams)\n\n\nfrom nltk.probability import FreqDist\n\n# Create bigrams\nbigrams = list(ngrams(tokens, 2))\n\n# Count the frequency of bigrams\nfdist = FreqDist(bigrams)\n\n# Print the most common bigrams\nprint(fdist.most_common(5))\n\n\nimport pandas as pd\nimport seaborn as sns\n\n# Convert the frequency distribution to a pandas DataFrame\nbigram_freq_df = pd.DataFrame(fdist.items(), columns=['Bigram', 'Frequency'])\n\n# Split the bigram tuples into separate columns for better handling\nbigram_freq_df[['Word1', 'Word2']] = pd.DataFrame(bigram_freq_df['Bigram'].tolist(), index=bigram_freq_df.index)\n\n# Remove the original 'Bigram' column as we no longer need it\nbigram_freq_df.drop(columns=['Bigram'], inplace=True)\n\n# Sort by frequency to get the most common bigrams\nbigram_freq_df = bigram_freq_df.sort_values(by='Frequency', ascending=False)\n\n# Create a new column for better labeling in the plot (e.g., 'Word1 Word2')\nbigram_freq_df['Bigram'] = bigram_freq_df['Word1'] + ' ' + bigram_freq_df['Word2']\n\n# Plot the top 10 bigrams using Seaborn\nplt.figure(figsize=(10, 6))\nsns.barplot(x='Frequency', y='Bigram', data=bigram_freq_df.head(10), hue='Bigram', palette='viridis', dodge=False, legend=False)\nplt.title('Top 10 Bigrams by Frequency')\nplt.xlabel('Frequency')\nplt.ylabel('Bigrams')\nplt.show()\n\n\nfrom nltk.probability import FreqDist\n\n# Create bigrams\nbigrams = list(ngrams(tokens, 3))\n\n# Count the frequency of bigrams\nfdist = FreqDist(bigrams)\n\n# Print the most common bigrams\nprint(fdist.most_common(5))\n\n\nfdist.plot(10)"
  },
  {
    "objectID": "notebooks/NLTK.html#séance-3---caractérisation-du-texte---analyser-les-cooccurrences-et-les-concordances",
    "href": "notebooks/NLTK.html#séance-3---caractérisation-du-texte---analyser-les-cooccurrences-et-les-concordances",
    "title": "Séance 1 - Caractérisation du texte : approche fréquentiste - Préparer le texte et compter les mots",
    "section": "Séance 3 - Caractérisation du texte - Analyser les cooccurrences et les concordances",
    "text": "Séance 3 - Caractérisation du texte - Analyser les cooccurrences et les concordances\n\nConcordance : mots avant et après (contexte)\n\ntext_nltk = nltk.Text(words_without_stop_words_and_punctuation)\n\ntext_nltk.concordance('paralympiques')\n\n\ntext_nltk.concordance('jeux')\n\n\ntext_nltk.concordance('france')\n\n\ntext_nltk.concordance('salarié')\n\n\n\nCo-occurences : Mots qui apparaissent ensemble dans les phrases\n\npas de fonction dans NTLK pour faire cela, hormis les n-grams"
  }
]